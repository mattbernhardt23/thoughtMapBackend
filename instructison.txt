This is the command I used to create the secret for storing my Mongo URI String.

printf 'mongodb+srv://matth3wbernhardt:PiJ1sXuORDPCO9m7@conversationcluster.65lkjh7.mongodb.net/test?retryWrites=true&w=majority' | docker secret create mongo-uri -

(base) matthewbernhardt@Matthews-MacBook-Air thoughtMapBackend % printf 'mongodb+srv://matth3wbernhardt:PiJ1sXuORDPCO9m7@conversationcluster.65lkjh7.mongodb.net/test?retryWrites=true&w=majority' | docker secret create mongo-uri -
c3bytsx1oq1wdalb9gdbole9d

Command to Build Java Application

mvn clean package

Command to Build Locally 

docker build -t backend-service .

Command to Run Single Container 

docker run -d -p 8080:8080 --name backend-container backend/service

Command to Run Docker stack

docker stack deploy --detach=false -c docker-stack.yml backend-stack

Command to Kill Docker stack

docker stack rm backend-stack


The first time it failed because 'docker swarm init' had not been run. I will have to update this on my EC2 instance as well.

When I ran 'docker swarm init' locally I recevied the following: 

(base) matthewbernhardt@Matthews-MacBook-Air thoughtMapBackend % docker swarm init
Swarm initialized: current node (vat7rywc4ovemqposayyf5lo0) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-0bwempy3l38nmye7ny2uq3hvr7xqfq5ls6w49mto2cf92xxs7m-98jws4dcc8cb9uwuiuddv6cvt 192.168.65.3:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

To kill the docker stack, run the following command. We have to kill it, otherwise the containers will just keep re-starting.

docker stack rm backend-stack

[ec2-user@ip-172-31-19-131 ~]$ docker swarm init
Swarm initialized: current node (lhycizhbbs5jsb7fdopfuuww2) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4cqh0hinas50rxalnfnvnn8jv45utqd88c4ykue24qr1jpdsi8-3ywj57zmhn080qbt4tujqb8q7 172.31.19.131:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.